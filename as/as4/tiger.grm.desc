
state 0:

	program : . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	program	goto 169
	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 1

	.	error


state 1:

	program : exp .  (reduce by rule 22)
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 22


state 2:

	exp : seq_exp .  (reduce by rule 35)



	.	reduce by rule 35


state 3:

	exp : uni_exp .  (reduce by rule 23)



	.	reduce by rule 23


state 4:

	exp : cmp_exp .  (reduce by rule 26)



	.	reduce by rule 26


state 5:

	exp : bool_exp .  (reduce by rule 25)



	.	reduce by rule 25


state 6:

	exp : ari_exp .  (reduce by rule 24)



	.	reduce by rule 24


state 7:

	assign_exp : lvalue . ASSIGN exp 
	lvalue_exp : lvalue .  (reduce by rule 54)

	ASSIGN	shift 39


	.	reduce by rule 54


state 8:

	exp : lvalue_exp .  (reduce by rule 27)



	.	reduce by rule 27


state 9:

	exp : if_exp .  (reduce by rule 29)



	.	reduce by rule 29


state 10:

	exp : loop_exp .  (reduce by rule 28)



	.	reduce by rule 28


state 11:

	exp : func_exp .  (reduce by rule 33)



	.	reduce by rule 33


state 12:

	exp : record_exp .  (reduce by rule 32)



	.	reduce by rule 32


state 13:

	exp : array_exp .  (reduce by rule 31)



	.	reduce by rule 31


state 14:

	exp : assign_exp .  (reduce by rule 30)



	.	reduce by rule 30


state 15:

	exp : let_exp .  (reduce by rule 34)



	.	reduce by rule 34


state 16:

	uni_exp : NIL .  (reduce by rule 38)



	.	reduce by rule 38


state 17:

	loop_exp : BREAK .  (reduce by rule 59)



	.	reduce by rule 59


state 18:

	let_exp : LET . decs IN expseq END 

	FUNCTION	shift 49
	VAR	shift 48
	TYPE	shift 47

	decs	goto 46
	dec	goto 45
	fundecs	goto 44
	fundecs_aux	goto 43
	tydecs	goto 42
	tydecs_aux	goto 41
	vardec	goto 40

	.	reduce by rule 0


state 19:

	loop_exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 50


	.	error


state 20:

	loop_exp : WHILE . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 51

	.	error


state 21:

	if_exp : IF . exp THEN exp 
	if_exp : IF . exp THEN exp ELSE exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 52

	.	error


state 22:

	ari_exp : MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 53

	.	error


state 23:

	uni_exp : LPAREN . RPAREN 
	seq_exp : LPAREN . exp SEMICOLON seq_exp_aux RPAREN 
	exp : LPAREN . exp RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	RPAREN	shift 55
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 54

	.	error


state 24:

	uni_exp : STRING .  (reduce by rule 39)



	.	reduce by rule 39


state 25:

	uni_exp : INT .  (reduce by rule 37)



	.	reduce by rule 37


state 26:

	array_exp : ID . LBRACK exp RBRACK OF exp 
	record_exp : ID . LBRACE RBRACE 
	record_exp : ID . LBRACE ID EQ exp record_aux RBRACE 
	func_exp : ID . LPAREN RPAREN 
	func_exp : ID . LPAREN exp func_aux RPAREN 
	lvalue : ID . lvalue_aux 

	LPAREN	shift 60
	LBRACK	shift 59
	LBRACE	shift 58
	DOT	shift 57

	lvalue_aux	goto 56

	.	reduce by rule 56


state 27:

	bool_exp : exp OR . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 61

	.	error


state 28:

	bool_exp : exp AND . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 62

	.	error


state 29:

	cmp_exp : exp GE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 63

	.	error


state 30:

	cmp_exp : exp GT . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 64

	.	error


state 31:

	cmp_exp : exp LE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 65

	.	error


state 32:

	cmp_exp : exp LT . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 66

	.	error


state 33:

	cmp_exp : exp NEQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 67

	.	error


state 34:

	cmp_exp : exp EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 68

	.	error


state 35:

	ari_exp : exp DIVIDE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 69

	.	error


state 36:

	ari_exp : exp TIMES . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 70

	.	error


state 37:

	ari_exp : exp MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 71

	.	error


state 38:

	ari_exp : exp PLUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 72

	.	error


state 39:

	assign_exp : lvalue ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 73

	.	error


state 40:

	dec : vardec .  (reduce by rule 3)



	.	reduce by rule 3


state 41:

	tydecs : tydecs_aux .  (reduce by rule 5)



	.	reduce by rule 5


state 42:

	dec : tydecs .  (reduce by rule 2)



	.	reduce by rule 2


state 43:

	fundecs : fundecs_aux .  (reduce by rule 17)



	.	reduce by rule 17


state 44:

	dec : fundecs .  (reduce by rule 4)



	.	reduce by rule 4


state 45:

	decs : dec . decs 

	FUNCTION	shift 49
	VAR	shift 48
	TYPE	shift 47

	decs	goto 74
	dec	goto 45
	fundecs	goto 44
	fundecs_aux	goto 43
	tydecs	goto 42
	tydecs_aux	goto 41
	vardec	goto 40

	.	reduce by rule 0


state 46:

	let_exp : LET decs . IN expseq END 

	IN	shift 75


	.	error


state 47:

	tydecs_aux : TYPE . ID EQ ty 
	tydecs_aux : TYPE . ID EQ ty tydecs_aux 

	ID	shift 76


	.	error


state 48:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 77


	.	error


state 49:

	fundecs_aux : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundecs_aux : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 
	fundecs_aux : FUNCTION . ID LPAREN tyfields RPAREN EQ exp fundecs_aux 
	fundecs_aux : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp fundecs_aux 

	ID	shift 78


	.	error


state 50:

	loop_exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 79


	.	error


state 51:

	loop_exp : WHILE exp . DO exp 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 80


	.	error


state 52:

	if_exp : IF exp . THEN exp 
	if_exp : IF exp . THEN exp ELSE exp 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	THEN	shift 81


	.	error


state 53:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	ari_exp : MINUS exp .  (reduce by rule 53)
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 



	.	reduce by rule 53


state 54:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 
	seq_exp : LPAREN exp . SEMICOLON seq_exp_aux RPAREN 
	exp : LPAREN exp . RPAREN 

	SEMICOLON	shift 83
	RPAREN	shift 82
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 55:

	uni_exp : LPAREN RPAREN .  (reduce by rule 40)



	.	reduce by rule 40


state 56:

	lvalue : ID lvalue_aux .  (reduce by rule 55)



	.	reduce by rule 55


state 57:

	lvalue_aux : DOT . ID lvalue_aux 

	ID	shift 84


	.	error


state 58:

	record_exp : ID LBRACE . RBRACE 
	record_exp : ID LBRACE . ID EQ exp record_aux RBRACE 

	ID	shift 86
	RBRACE	shift 85


	.	error


state 59:

	array_exp : ID LBRACK . exp RBRACK OF exp 
	lvalue_aux : LBRACK . exp RBRACK lvalue_aux 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 87

	.	error


state 60:

	func_exp : ID LPAREN . RPAREN 
	func_exp : ID LPAREN . exp func_aux RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	RPAREN	shift 89
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 88

	.	error


state 61:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	bool_exp : exp OR exp .  (reduce by rule 48)
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28


	.	reduce by rule 48


state 62:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp AND exp .  (reduce by rule 47)
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29


	.	reduce by rule 47


state 63:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp GE exp .  (reduce by rule 45)
	cmp_exp : exp . LE exp 

	EOF	reduce by rule 45
	COMMA	reduce by rule 45
	SEMICOLON	reduce by rule 45
	RPAREN	reduce by rule 45
	RBRACK	reduce by rule 45
	RBRACE	reduce by rule 45
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 45
	OR	reduce by rule 45
	THEN	reduce by rule 45
	ELSE	reduce by rule 45
	TO	reduce by rule 45
	DO	reduce by rule 45
	IN	reduce by rule 45
	END	reduce by rule 45
	FUNCTION	reduce by rule 45
	VAR	reduce by rule 45
	TYPE	reduce by rule 45


	.	error


state 64:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp GT exp .  (reduce by rule 43)
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	RBRACE	reduce by rule 43
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 65:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp LE exp .  (reduce by rule 46)

	EOF	reduce by rule 46
	COMMA	reduce by rule 46
	SEMICOLON	reduce by rule 46
	RPAREN	reduce by rule 46
	RBRACK	reduce by rule 46
	RBRACE	reduce by rule 46
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 46
	OR	reduce by rule 46
	THEN	reduce by rule 46
	ELSE	reduce by rule 46
	TO	reduce by rule 46
	DO	reduce by rule 46
	IN	reduce by rule 46
	END	reduce by rule 46
	FUNCTION	reduce by rule 46
	VAR	reduce by rule 46
	TYPE	reduce by rule 46


	.	error


state 66:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp LT exp .  (reduce by rule 44)
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	EOF	reduce by rule 44
	COMMA	reduce by rule 44
	SEMICOLON	reduce by rule 44
	RPAREN	reduce by rule 44
	RBRACK	reduce by rule 44
	RBRACE	reduce by rule 44
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 44
	OR	reduce by rule 44
	THEN	reduce by rule 44
	ELSE	reduce by rule 44
	TO	reduce by rule 44
	DO	reduce by rule 44
	IN	reduce by rule 44
	END	reduce by rule 44
	FUNCTION	reduce by rule 44
	VAR	reduce by rule 44
	TYPE	reduce by rule 44


	.	error


state 67:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp NEQ exp .  (reduce by rule 42)
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	RBRACK	reduce by rule 42
	RBRACE	reduce by rule 42
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	IN	reduce by rule 42
	END	reduce by rule 42
	FUNCTION	reduce by rule 42
	VAR	reduce by rule 42
	TYPE	reduce by rule 42


	.	error


state 68:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp EQ exp .  (reduce by rule 41)
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	RBRACE	reduce by rule 41
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 69:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	ari_exp : exp DIVIDE exp .  (reduce by rule 52)
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 



	.	reduce by rule 52


state 70:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp TIMES exp .  (reduce by rule 51)
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 



	.	reduce by rule 51


state 71:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp MINUS exp .  (reduce by rule 50)
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 50


state 72:

	ari_exp : exp . PLUS exp 
	ari_exp : exp PLUS exp .  (reduce by rule 49)
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 49


state 73:

	assign_exp : lvalue ASSIGN exp .  (reduce by rule 64)
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 64


state 74:

	decs : dec decs .  (reduce by rule 1)



	.	reduce by rule 1


state 75:

	let_exp : LET decs IN . expseq END 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	expseq	goto 91
	exp	goto 90

	.	reduce by rule 75


state 76:

	tydecs_aux : TYPE ID . EQ ty 
	tydecs_aux : TYPE ID . EQ ty tydecs_aux 

	EQ	shift 92


	.	error


state 77:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 94
	ASSIGN	shift 93


	.	error


state 78:

	fundecs_aux : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundecs_aux : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 
	fundecs_aux : FUNCTION ID . LPAREN tyfields RPAREN EQ exp fundecs_aux 
	fundecs_aux : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp fundecs_aux 

	LPAREN	shift 95


	.	error


state 79:

	loop_exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 96

	.	error


state 80:

	loop_exp : WHILE exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 97

	.	error


state 81:

	if_exp : IF exp THEN . exp 
	if_exp : IF exp THEN . exp ELSE exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 98

	.	error


state 82:

	exp : LPAREN exp RPAREN .  (reduce by rule 36)



	.	reduce by rule 36


state 83:

	seq_exp : LPAREN exp SEMICOLON . seq_exp_aux RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	seq_exp_aux	goto 100
	exp	goto 99

	.	error


state 84:

	lvalue_aux : DOT ID . lvalue_aux 

	LBRACK	shift 102
	DOT	shift 57

	lvalue_aux	goto 101

	.	reduce by rule 56


state 85:

	record_exp : ID LBRACE RBRACE .  (reduce by rule 66)



	.	reduce by rule 66


state 86:

	record_exp : ID LBRACE ID . EQ exp record_aux RBRACE 

	EQ	shift 103


	.	error


state 87:

	array_exp : ID LBRACK exp . RBRACK OF exp 
	lvalue_aux : LBRACK exp . RBRACK lvalue_aux 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	RBRACK	shift 104
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 88:

	func_exp : ID LPAREN exp . func_aux RPAREN 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	COMMA	shift 106
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	func_aux	goto 105

	.	reduce by rule 72


state 89:

	func_exp : ID LPAREN RPAREN .  (reduce by rule 70)



	.	reduce by rule 70


state 90:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 
	expseq : exp . expseq_aux 

	SEMICOLON	shift 108
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	expseq_aux	goto 107

	.	reduce by rule 77


state 91:

	let_exp : LET decs IN expseq . END 

	END	shift 109


	.	error


state 92:

	tydecs_aux : TYPE ID EQ . ty 
	tydecs_aux : TYPE ID EQ . ty tydecs_aux 

	ID	shift 113
	LBRACE	shift 112
	ARRAY	shift 111

	ty	goto 110

	.	error


state 93:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 114

	.	error


state 94:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 115


	.	error


state 95:

	fundecs_aux : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundecs_aux : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 
	fundecs_aux : FUNCTION ID LPAREN . tyfields RPAREN EQ exp fundecs_aux 
	fundecs_aux : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp fundecs_aux 

	ID	shift 117

	tyfields	goto 116

	.	reduce by rule 11


state 96:

	loop_exp : FOR ID ASSIGN exp . TO exp DO exp 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	TO	shift 118


	.	error


state 97:

	loop_exp : WHILE exp DO exp .  (reduce by rule 60)
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 60


state 98:

	if_exp : IF exp THEN exp .  (reduce by rule 62)
	if_exp : IF exp THEN exp . ELSE exp 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	ELSE	shift 119


	.	reduce by rule 62


state 99:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 
	seq_exp_aux : exp . SEMICOLON seq_exp_aux 
	seq_exp_aux : exp .  (reduce by rule 81)

	SEMICOLON	shift 120
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 81


state 100:

	seq_exp : LPAREN exp SEMICOLON seq_exp_aux . RPAREN 

	RPAREN	shift 121


	.	error


state 101:

	lvalue_aux : DOT ID lvalue_aux .  (reduce by rule 57)



	.	reduce by rule 57


state 102:

	lvalue_aux : LBRACK . exp RBRACK lvalue_aux 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 122

	.	error


state 103:

	record_exp : ID LBRACE ID EQ . exp record_aux RBRACE 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 123

	.	error


state 104:

	array_exp : ID LBRACK exp RBRACK . OF exp 
	lvalue_aux : LBRACK exp RBRACK . lvalue_aux 

	LBRACK	shift 102
	DOT	shift 57
	OF	shift 125

	lvalue_aux	goto 124

	.	reduce by rule 56


state 105:

	func_exp : ID LPAREN exp func_aux . RPAREN 

	RPAREN	shift 126


	.	error


state 106:

	func_aux : COMMA . exp func_aux 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 127

	.	error


state 107:

	expseq : exp expseq_aux .  (reduce by rule 76)



	.	reduce by rule 76


state 108:

	expseq_aux : SEMICOLON . exp expseq_aux 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 128

	.	error


state 109:

	let_exp : LET decs IN expseq END .  (reduce by rule 74)



	.	reduce by rule 74


state 110:

	tydecs_aux : TYPE ID EQ ty .  (reduce by rule 6)
	tydecs_aux : TYPE ID EQ ty . tydecs_aux 

	TYPE	shift 47

	tydecs_aux	goto 129

	.	reduce by rule 6


state 111:

	ty : ARRAY . OF ID 

	OF	shift 130


	.	error


state 112:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 117

	tyfields	goto 131

	.	reduce by rule 11


state 113:

	ty : ID .  (reduce by rule 8)



	.	reduce by rule 8


state 114:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 15)
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 15


state 115:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 132


	.	error


state 116:

	fundecs_aux : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundecs_aux : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 
	fundecs_aux : FUNCTION ID LPAREN tyfields . RPAREN EQ exp fundecs_aux 
	fundecs_aux : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp fundecs_aux 

	RPAREN	shift 133


	.	error


state 117:

	tyfields : ID . COLON ID tyfields_aux 

	COLON	shift 134


	.	error


state 118:

	loop_exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 135

	.	error


state 119:

	if_exp : IF exp THEN exp ELSE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 136

	.	error


state 120:

	seq_exp_aux : exp SEMICOLON . seq_exp_aux 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	seq_exp_aux	goto 137
	exp	goto 99

	.	error


state 121:

	seq_exp : LPAREN exp SEMICOLON seq_exp_aux RPAREN .  (reduce by rule 79)



	.	reduce by rule 79


state 122:

	lvalue_aux : LBRACK exp . RBRACK lvalue_aux 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	RBRACK	shift 138
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 123:

	record_exp : ID LBRACE ID EQ exp . record_aux RBRACE 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	COMMA	shift 140
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	record_aux	goto 139

	.	reduce by rule 68


state 124:

	lvalue_aux : LBRACK exp RBRACK lvalue_aux .  (reduce by rule 58)



	.	reduce by rule 58


state 125:

	array_exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 141

	.	error


state 126:

	func_exp : ID LPAREN exp func_aux RPAREN .  (reduce by rule 71)



	.	reduce by rule 71


state 127:

	func_aux : COMMA exp . func_aux 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	COMMA	shift 106
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	func_aux	goto 142

	.	reduce by rule 72


state 128:

	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 
	expseq_aux : SEMICOLON exp . expseq_aux 

	SEMICOLON	shift 108
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	expseq_aux	goto 143

	.	reduce by rule 77


state 129:

	tydecs_aux : TYPE ID EQ ty tydecs_aux .  (reduce by rule 7)



	.	reduce by rule 7


state 130:

	ty : ARRAY OF . ID 

	ID	shift 144


	.	error


state 131:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 145


	.	error


state 132:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 146

	.	error


state 133:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN . EQ exp fundecs_aux 
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp fundecs_aux 

	COLON	shift 148
	EQ	shift 147


	.	error


state 134:

	tyfields : ID COLON . ID tyfields_aux 

	ID	shift 149


	.	error


state 135:

	loop_exp : FOR ID ASSIGN exp TO exp . DO exp 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 150


	.	error


state 136:

	if_exp : IF exp THEN exp ELSE exp .  (reduce by rule 63)
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 63


state 137:

	seq_exp_aux : exp SEMICOLON seq_exp_aux .  (reduce by rule 80)



	.	reduce by rule 80


state 138:

	lvalue_aux : LBRACK exp RBRACK . lvalue_aux 

	LBRACK	shift 102
	DOT	shift 57

	lvalue_aux	goto 124

	.	reduce by rule 56


state 139:

	record_exp : ID LBRACE ID EQ exp record_aux . RBRACE 

	RBRACE	shift 151


	.	error


state 140:

	record_aux : COMMA . ID EQ exp record_aux 

	ID	shift 152


	.	error


state 141:

	array_exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 65)
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 65


state 142:

	func_aux : COMMA exp func_aux .  (reduce by rule 73)



	.	reduce by rule 73


state 143:

	expseq_aux : SEMICOLON exp expseq_aux .  (reduce by rule 78)



	.	reduce by rule 78


state 144:

	ty : ARRAY OF ID .  (reduce by rule 10)



	.	reduce by rule 10


state 145:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 9)



	.	reduce by rule 9


state 146:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 16)
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 16


state 147:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN EQ . exp fundecs_aux 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 153

	.	error


state 148:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp fundecs_aux 

	ID	shift 154


	.	error


state 149:

	tyfields : ID COLON ID . tyfields_aux 

	COMMA	shift 156

	tyfields_aux	goto 155

	.	reduce by rule 13


state 150:

	loop_exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 157

	.	error


state 151:

	record_exp : ID LBRACE ID EQ exp record_aux RBRACE .  (reduce by rule 67)



	.	reduce by rule 67


state 152:

	record_aux : COMMA ID . EQ exp record_aux 

	EQ	shift 158


	.	error


state 153:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 18)
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN EQ exp . fundecs_aux 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	FUNCTION	shift 49

	fundecs_aux	goto 159

	.	reduce by rule 18


state 154:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp fundecs_aux 

	EQ	shift 160


	.	error


state 155:

	tyfields : ID COLON ID tyfields_aux .  (reduce by rule 12)



	.	reduce by rule 12


state 156:

	tyfields_aux : COMMA . ID COLON ID tyfields_aux 

	ID	shift 161


	.	error


state 157:

	loop_exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 61)
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 61


state 158:

	record_aux : COMMA ID EQ . exp record_aux 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 162

	.	error


state 159:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN EQ exp fundecs_aux .  (reduce by rule 20)



	.	reduce by rule 20


state 160:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp fundecs_aux 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16

	let_exp	goto 15
	assign_exp	goto 14
	array_exp	goto 13
	record_exp	goto 12
	func_exp	goto 11
	loop_exp	goto 10
	if_exp	goto 9
	lvalue_exp	goto 8
	lvalue	goto 7
	ari_exp	goto 6
	bool_exp	goto 5
	cmp_exp	goto 4
	uni_exp	goto 3
	seq_exp	goto 2
	exp	goto 163

	.	error


state 161:

	tyfields_aux : COMMA ID . COLON ID tyfields_aux 

	COLON	shift 164


	.	error


state 162:

	record_aux : COMMA ID EQ exp . record_aux 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	COMMA	shift 140
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	record_aux	goto 165

	.	reduce by rule 68


state 163:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 19)
	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp . fundecs_aux 
	ari_exp : exp . PLUS exp 
	ari_exp : exp . MINUS exp 
	ari_exp : exp . TIMES exp 
	ari_exp : exp . DIVIDE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	FUNCTION	shift 49

	fundecs_aux	goto 166

	.	reduce by rule 19


state 164:

	tyfields_aux : COMMA ID COLON . ID tyfields_aux 

	ID	shift 167


	.	error


state 165:

	record_aux : COMMA ID EQ exp record_aux .  (reduce by rule 69)



	.	reduce by rule 69


state 166:

	fundecs_aux : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp fundecs_aux .  (reduce by rule 21)



	.	reduce by rule 21


state 167:

	tyfields_aux : COMMA ID COLON ID . tyfields_aux 

	COMMA	shift 156

	tyfields_aux	goto 168

	.	reduce by rule 13


state 168:

	tyfields_aux : COMMA ID COLON ID tyfields_aux .  (reduce by rule 14)



	.	reduce by rule 14


state 169:


	EOF	accept


	.	error

531 of 1132 action table entries left after compaction
621 goto table entries
